Grammar

    0 $accept: Prog $end

    1 Prog: Exp

    2 Exp: LValue
    3    | TOK_INTEGER
    4    | TOK_NIL
    5    | TOK_STRING
    6    | TOK_ID TOK_LBR ArgList TOK_RBR
    7    | Exp BinOp_L1 Exp
    8    | Exp BinOp_L2 Exp
    9    | Exp BinOp_L3 Exp
   10    | Exp BinOp_L4 Exp
   11    | Exp BinOp_L5 Exp
   12    | UnOp Exp
   13    | TOK_ID TOK_LCURLB FieldExpList TOK_RCURLB
   14    | TOK_LBR ExpList TOK_RBR
   15    | LValue TOK_ASSIGN Exp
   16    | TOK_IF Exp TOK_THEN Exp
   17    | TOK_IF Exp TOK_THEN Exp TOK_ELSE Exp
   18    | TOK_WHILE Exp TOK_DO Exp
   19    | TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO Exp TOK_DO Exp
   20    | TOK_BREAK
   21    | TOK_LET DecList TOK_IN ExpList TOK_END
   22    | TOK_ID TOK_OF SqBExp Exp

   23 SqBExp: TOK_LSQB Exp TOK_RSQB

   24 DecList: /* empty */
   25        | Dec DecList

   26 Dec: TyDec
   27    | VarDec
   28    | FunDec

   29 TyDec: TOK_TYPE TOK_ID TOK_EQUALS Ty

   30 Ty: TOK_ID
   31   | TOK_LCURLB FieldList TOK_RCURLB
   32   | TOK_ARRAY TOK_OF TOK_ID

   33 VarDec: TOK_VAR TOK_ID TOK_ASSIGN Exp
   34       | TOK_VAR TOK_ID TOK_COLON TOK_ID TOK_ASSIGN Exp

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR Exp
   36       | TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

   37 LValue: TOK_ID
   38       | LValue TOK_DOT TOK_ID
   39       | LValue SqBExp

   40 ExpList: /* empty */
   41        | Exp ExpListPr

   42 ExpListPr: /* empty */
   43          | TOK_SEMIC Exp ExpListPr

   44 ArgList: /* empty */
   45        | Exp ArgListPr

   46 ArgListPr: /* empty */
   47          | TOK_COMMA Exp ArgListPr

   48 FieldList: /* empty */
   49          | TOK_ID TOK_COLON TOK_ID FieldListPr

   50 FieldListPr: /* empty */
   51            | TOK_COMMA TOK_ID TOK_COLON TOK_ID FieldListPr

   52 FieldExpList: /* empty */
   53             | TOK_ID TOK_EQUALS Exp FieldExpListPr

   54 FieldExpListPr: /* empty */
   55               | TOK_COMMA TOK_ID TOK_EQUALS Exp FieldExpListPr

   56 BinOp_L1: TOK_MULT_SIGN
   57         | TOK_DIV_SIGN

   58 BinOp_L2: TOK_PLUS_SIGN
   59         | TOK_MINUS_SIGN

   60 BinOp_L3: TOK_NEQ
   61         | TOK_LT
   62         | TOK_LTE
   63         | TOK_GT
   64         | TOK_GTE
   65         | TOK_EQUALS

   66 BinOp_L4: TOK_AND

   67 BinOp_L5: TOK_OR

   68 UnOp: TOK_MINUS_SIGN


Terminals, with rules where they appear

$end (0) 0
error (256)
TOK_ARRAY (258) 32
TOK_BREAK (259) 20
TOK_DO (260) 18 19
TOK_ELSE (261) 17
TOK_END (262) 21
TOK_FOR (263) 19
TOK_FUNCTION (264) 35 36
TOK_IF (265) 16 17
TOK_IN (266) 21
TOK_LET (267) 21
TOK_NIL (268) 4
TOK_OF (269) 22 32
TOK_THEN (270) 16 17
TOK_TO (271) 19
TOK_TYPE (272) 29
TOK_VAR (273) 33 34
TOK_WHILE (274) 18
TOK_PLUS_SIGN (275) 58
TOK_MINUS_SIGN (276) 59 68
TOK_MULT_SIGN (277) 56
TOK_DIV_SIGN (278) 57
TOK_AND (279) 66
TOK_OR (280) 67
TOK_EQUALS (281) 29 36 53 55 65
TOK_NEQ (282) 60
TOK_LT (283) 61
TOK_LTE (284) 62
TOK_GT (285) 63
TOK_GTE (286) 64
TOK_ASSIGN (287) 15 19 33 34
TOK_SEMIC (288) 43
TOK_COMMA (289) 47 51 55
TOK_COLON (290) 34 36 49 51
TOK_DOT (291) 38
TOK_LBR (292) 6 14 35 36
TOK_RBR (293) 6 14 35 36
TOK_LSQB (294) 23
TOK_RSQB (295) 23
TOK_LCURLB (296) 13 31
TOK_RCURLB (297) 13 31
TOK_INTEGER (298) 3
TOK_ID (299) 6 13 19 22 29 30 32 33 34 35 36 37 38 49 51 53 55
TOK_STRING (300) 5
EXP_REDUCE_PREC (301)
IF_WO_ELSE_PREC (302)
UNIOP_PREC (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
Prog (50)
    on left: 1, on right: 0
Exp (51)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22,
    on right: 1 7 8 9 10 11 12 15 16 17 18 19 22 23 33 34 35 36 41
    43 45 47 53 55
SqBExp (52)
    on left: 23, on right: 22 39
DecList (53)
    on left: 24 25, on right: 21 25
Dec (54)
    on left: 26 27 28, on right: 25
TyDec (55)
    on left: 29, on right: 26
Ty (56)
    on left: 30 31 32, on right: 29
VarDec (57)
    on left: 33 34, on right: 27
FunDec (58)
    on left: 35 36, on right: 28
LValue (59)
    on left: 37 38 39, on right: 2 15 38 39
ExpList (60)
    on left: 40 41, on right: 14 21
ExpListPr (61)
    on left: 42 43, on right: 41 43
ArgList (62)
    on left: 44 45, on right: 6
ArgListPr (63)
    on left: 46 47, on right: 45 47
FieldList (64)
    on left: 48 49, on right: 31 35 36
FieldListPr (65)
    on left: 50 51, on right: 49 51
FieldExpList (66)
    on left: 52 53, on right: 13
FieldExpListPr (67)
    on left: 54 55, on right: 53 55
BinOp_L1 (68)
    on left: 56 57, on right: 7
BinOp_L2 (69)
    on left: 58 59, on right: 8
BinOp_L3 (70)
    on left: 60 61 62 63 64 65, on right: 9
BinOp_L4 (71)
    on left: 66, on right: 10
BinOp_L5 (72)
    on left: 67, on right: 11
UnOp (73)
    on left: 68, on right: 12


State 0

    0 $accept: . Prog $end

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Prog    go to state 12
    Exp     go to state 13
    LValue  go to state 14
    UnOp    go to state 15


State 1

   20 Exp: TOK_BREAK .

    $default  reduce using rule 20 (Exp)


State 2

   19 Exp: TOK_FOR . TOK_ID TOK_ASSIGN Exp TOK_TO Exp TOK_DO Exp

    TOK_ID  shift, and go to state 16


State 3

   16 Exp: TOK_IF . Exp TOK_THEN Exp
   17    | TOK_IF . Exp TOK_THEN Exp TOK_ELSE Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 17
    LValue  go to state 14
    UnOp    go to state 15


State 4

   21 Exp: TOK_LET . DecList TOK_IN ExpList TOK_END

    TOK_FUNCTION  shift, and go to state 18
    TOK_TYPE      shift, and go to state 19
    TOK_VAR       shift, and go to state 20

    $default  reduce using rule 24 (DecList)

    DecList  go to state 21
    Dec      go to state 22
    TyDec    go to state 23
    VarDec   go to state 24
    FunDec   go to state 25


State 5

    4 Exp: TOK_NIL .

    $default  reduce using rule 4 (Exp)


State 6

   18 Exp: TOK_WHILE . Exp TOK_DO Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 26
    LValue  go to state 14
    UnOp    go to state 15


State 7

   68 UnOp: TOK_MINUS_SIGN .

    $default  reduce using rule 68 (UnOp)


State 8

   14 Exp: TOK_LBR . ExpList TOK_RBR

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    $default  reduce using rule 40 (ExpList)

    Exp      go to state 27
    LValue   go to state 14
    ExpList  go to state 28
    UnOp     go to state 15


State 9

    3 Exp: TOK_INTEGER .

    $default  reduce using rule 3 (Exp)


State 10

    6 Exp: TOK_ID . TOK_LBR ArgList TOK_RBR
   13    | TOK_ID . TOK_LCURLB FieldExpList TOK_RCURLB
   22    | TOK_ID . TOK_OF SqBExp Exp
   37 LValue: TOK_ID .

    TOK_OF      shift, and go to state 29
    TOK_LBR     shift, and go to state 30
    TOK_LCURLB  shift, and go to state 31

    $default  reduce using rule 37 (LValue)


State 11

    5 Exp: TOK_STRING .

    $default  reduce using rule 5 (Exp)


State 12

    0 $accept: Prog . $end

    $end  shift, and go to state 32


State 13

    1 Prog: Exp .
    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 1 (Prog)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 14

    2 Exp: LValue .
   15    | LValue . TOK_ASSIGN Exp
   38 LValue: LValue . TOK_DOT TOK_ID
   39       | LValue . SqBExp

    TOK_ASSIGN  shift, and go to state 50
    TOK_DOT     shift, and go to state 51
    TOK_LSQB    shift, and go to state 52

    $default  reduce using rule 2 (Exp)

    SqBExp  go to state 53


State 15

   12 Exp: UnOp . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 54
    LValue  go to state 14
    UnOp    go to state 15


State 16

   19 Exp: TOK_FOR TOK_ID . TOK_ASSIGN Exp TOK_TO Exp TOK_DO Exp

    TOK_ASSIGN  shift, and go to state 55


State 17

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   16    | TOK_IF Exp . TOK_THEN Exp
   17    | TOK_IF Exp . TOK_THEN Exp TOK_ELSE Exp

    TOK_THEN        shift, and go to state 56
    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 18

   35 FunDec: TOK_FUNCTION . TOK_ID TOK_LBR FieldList TOK_RBR Exp
   36       | TOK_FUNCTION . TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_ID  shift, and go to state 57


State 19

   29 TyDec: TOK_TYPE . TOK_ID TOK_EQUALS Ty

    TOK_ID  shift, and go to state 58


State 20

   33 VarDec: TOK_VAR . TOK_ID TOK_ASSIGN Exp
   34       | TOK_VAR . TOK_ID TOK_COLON TOK_ID TOK_ASSIGN Exp

    TOK_ID  shift, and go to state 59


State 21

   21 Exp: TOK_LET DecList . TOK_IN ExpList TOK_END

    TOK_IN  shift, and go to state 60


State 22

   25 DecList: Dec . DecList

    TOK_FUNCTION  shift, and go to state 18
    TOK_TYPE      shift, and go to state 19
    TOK_VAR       shift, and go to state 20

    $default  reduce using rule 24 (DecList)

    DecList  go to state 61
    Dec      go to state 22
    TyDec    go to state 23
    VarDec   go to state 24
    FunDec   go to state 25


State 23

   26 Dec: TyDec .

    $default  reduce using rule 26 (Dec)


State 24

   27 Dec: VarDec .

    $default  reduce using rule 27 (Dec)


State 25

   28 Dec: FunDec .

    $default  reduce using rule 28 (Dec)


State 26

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   18    | TOK_WHILE Exp . TOK_DO Exp

    TOK_DO          shift, and go to state 62
    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 27

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   41 ExpList: Exp . ExpListPr

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44
    TOK_SEMIC       shift, and go to state 63

    $default  reduce using rule 42 (ExpListPr)

    ExpListPr  go to state 64
    BinOp_L1   go to state 45
    BinOp_L2   go to state 46
    BinOp_L3   go to state 47
    BinOp_L4   go to state 48
    BinOp_L5   go to state 49


State 28

   14 Exp: TOK_LBR ExpList . TOK_RBR

    TOK_RBR  shift, and go to state 65


State 29

   22 Exp: TOK_ID TOK_OF . SqBExp Exp

    TOK_LSQB  shift, and go to state 52

    SqBExp  go to state 66


State 30

    6 Exp: TOK_ID TOK_LBR . ArgList TOK_RBR

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    $default  reduce using rule 44 (ArgList)

    Exp      go to state 67
    LValue   go to state 14
    ArgList  go to state 68
    UnOp     go to state 15


State 31

   13 Exp: TOK_ID TOK_LCURLB . FieldExpList TOK_RCURLB

    TOK_ID  shift, and go to state 69

    $default  reduce using rule 52 (FieldExpList)

    FieldExpList  go to state 70


State 32

    0 $accept: Prog $end .

    $default  accept


State 33

   58 BinOp_L2: TOK_PLUS_SIGN .

    $default  reduce using rule 58 (BinOp_L2)


State 34

   59 BinOp_L2: TOK_MINUS_SIGN .

    $default  reduce using rule 59 (BinOp_L2)


State 35

   56 BinOp_L1: TOK_MULT_SIGN .

    $default  reduce using rule 56 (BinOp_L1)


State 36

   57 BinOp_L1: TOK_DIV_SIGN .

    $default  reduce using rule 57 (BinOp_L1)


State 37

   66 BinOp_L4: TOK_AND .

    $default  reduce using rule 66 (BinOp_L4)


State 38

   67 BinOp_L5: TOK_OR .

    $default  reduce using rule 67 (BinOp_L5)


State 39

   65 BinOp_L3: TOK_EQUALS .

    $default  reduce using rule 65 (BinOp_L3)


State 40

   60 BinOp_L3: TOK_NEQ .

    $default  reduce using rule 60 (BinOp_L3)


State 41

   61 BinOp_L3: TOK_LT .

    $default  reduce using rule 61 (BinOp_L3)


State 42

   62 BinOp_L3: TOK_LTE .

    $default  reduce using rule 62 (BinOp_L3)


State 43

   63 BinOp_L3: TOK_GT .

    $default  reduce using rule 63 (BinOp_L3)


State 44

   64 BinOp_L3: TOK_GTE .

    $default  reduce using rule 64 (BinOp_L3)


State 45

    7 Exp: Exp BinOp_L1 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 71
    LValue  go to state 14
    UnOp    go to state 15


State 46

    8 Exp: Exp BinOp_L2 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 72
    LValue  go to state 14
    UnOp    go to state 15


State 47

    9 Exp: Exp BinOp_L3 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 73
    LValue  go to state 14
    UnOp    go to state 15


State 48

   10 Exp: Exp BinOp_L4 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 74
    LValue  go to state 14
    UnOp    go to state 15


State 49

   11 Exp: Exp BinOp_L5 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 75
    LValue  go to state 14
    UnOp    go to state 15


State 50

   15 Exp: LValue TOK_ASSIGN . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 76
    LValue  go to state 14
    UnOp    go to state 15


State 51

   38 LValue: LValue TOK_DOT . TOK_ID

    TOK_ID  shift, and go to state 77


State 52

   23 SqBExp: TOK_LSQB . Exp TOK_RSQB

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 78
    LValue  go to state 14
    UnOp    go to state 15


State 53

   39 LValue: LValue SqBExp .

    $default  reduce using rule 39 (LValue)


State 54

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   12    | UnOp Exp .

    $default  reduce using rule 12 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 55

   19 Exp: TOK_FOR TOK_ID TOK_ASSIGN . Exp TOK_TO Exp TOK_DO Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 79
    LValue  go to state 14
    UnOp    go to state 15


State 56

   16 Exp: TOK_IF Exp TOK_THEN . Exp
   17    | TOK_IF Exp TOK_THEN . Exp TOK_ELSE Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 80
    LValue  go to state 14
    UnOp    go to state 15


State 57

   35 FunDec: TOK_FUNCTION TOK_ID . TOK_LBR FieldList TOK_RBR Exp
   36       | TOK_FUNCTION TOK_ID . TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_LBR  shift, and go to state 81


State 58

   29 TyDec: TOK_TYPE TOK_ID . TOK_EQUALS Ty

    TOK_EQUALS  shift, and go to state 82


State 59

   33 VarDec: TOK_VAR TOK_ID . TOK_ASSIGN Exp
   34       | TOK_VAR TOK_ID . TOK_COLON TOK_ID TOK_ASSIGN Exp

    TOK_ASSIGN  shift, and go to state 83
    TOK_COLON   shift, and go to state 84


State 60

   21 Exp: TOK_LET DecList TOK_IN . ExpList TOK_END

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    $default  reduce using rule 40 (ExpList)

    Exp      go to state 27
    LValue   go to state 14
    ExpList  go to state 85
    UnOp     go to state 15


State 61

   25 DecList: Dec DecList .

    $default  reduce using rule 25 (DecList)


State 62

   18 Exp: TOK_WHILE Exp TOK_DO . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 86
    LValue  go to state 14
    UnOp    go to state 15


State 63

   43 ExpListPr: TOK_SEMIC . Exp ExpListPr

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 87
    LValue  go to state 14
    UnOp    go to state 15


State 64

   41 ExpList: Exp ExpListPr .

    $default  reduce using rule 41 (ExpList)


State 65

   14 Exp: TOK_LBR ExpList TOK_RBR .

    $default  reduce using rule 14 (Exp)


State 66

   22 Exp: TOK_ID TOK_OF SqBExp . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 88
    LValue  go to state 14
    UnOp    go to state 15


State 67

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   45 ArgList: Exp . ArgListPr

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44
    TOK_COMMA       shift, and go to state 89

    $default  reduce using rule 46 (ArgListPr)

    ArgListPr  go to state 90
    BinOp_L1   go to state 45
    BinOp_L2   go to state 46
    BinOp_L3   go to state 47
    BinOp_L4   go to state 48
    BinOp_L5   go to state 49


State 68

    6 Exp: TOK_ID TOK_LBR ArgList . TOK_RBR

    TOK_RBR  shift, and go to state 91


State 69

   53 FieldExpList: TOK_ID . TOK_EQUALS Exp FieldExpListPr

    TOK_EQUALS  shift, and go to state 92


State 70

   13 Exp: TOK_ID TOK_LCURLB FieldExpList . TOK_RCURLB

    TOK_RCURLB  shift, and go to state 93


State 71

    7 Exp: Exp . BinOp_L1 Exp
    7    | Exp BinOp_L1 Exp .
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp

    $default  reduce using rule 7 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 72

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    8    | Exp BinOp_L2 Exp .
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp

    TOK_MULT_SIGN  shift, and go to state 35
    TOK_DIV_SIGN   shift, and go to state 36

    $default  reduce using rule 8 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 73

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
    9    | Exp BinOp_L3 Exp .
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36

    TOK_EQUALS  error (nonassociative)
    TOK_NEQ     error (nonassociative)
    TOK_LT      error (nonassociative)
    TOK_LTE     error (nonassociative)
    TOK_GT      error (nonassociative)
    TOK_GTE     error (nonassociative)

    $default  reduce using rule 9 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 74

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   10    | Exp BinOp_L4 Exp .
   11    | Exp . BinOp_L5 Exp

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 10 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 75

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   11    | Exp BinOp_L5 Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 11 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 76

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   15    | LValue TOK_ASSIGN Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 15 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 77

   38 LValue: LValue TOK_DOT TOK_ID .

    $default  reduce using rule 38 (LValue)


State 78

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   23 SqBExp: TOK_LSQB Exp . TOK_RSQB

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44
    TOK_RSQB        shift, and go to state 94

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 79

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   19    | TOK_FOR TOK_ID TOK_ASSIGN Exp . TOK_TO Exp TOK_DO Exp

    TOK_TO          shift, and go to state 95
    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 80

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   16    | TOK_IF Exp TOK_THEN Exp .
   17    | TOK_IF Exp TOK_THEN Exp . TOK_ELSE Exp

    TOK_ELSE        shift, and go to state 96
    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 16 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 81

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR . FieldList TOK_RBR Exp
   36       | TOK_FUNCTION TOK_ID TOK_LBR . FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_ID  shift, and go to state 97

    $default  reduce using rule 48 (FieldList)

    FieldList  go to state 98


State 82

   29 TyDec: TOK_TYPE TOK_ID TOK_EQUALS . Ty

    TOK_ARRAY   shift, and go to state 99
    TOK_LCURLB  shift, and go to state 100
    TOK_ID      shift, and go to state 101

    Ty  go to state 102


State 83

   33 VarDec: TOK_VAR TOK_ID TOK_ASSIGN . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 103
    LValue  go to state 14
    UnOp    go to state 15


State 84

   34 VarDec: TOK_VAR TOK_ID TOK_COLON . TOK_ID TOK_ASSIGN Exp

    TOK_ID  shift, and go to state 104


State 85

   21 Exp: TOK_LET DecList TOK_IN ExpList . TOK_END

    TOK_END  shift, and go to state 105


State 86

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   18    | TOK_WHILE Exp TOK_DO Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 18 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 87

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   43 ExpListPr: TOK_SEMIC Exp . ExpListPr

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44
    TOK_SEMIC       shift, and go to state 63

    $default  reduce using rule 42 (ExpListPr)

    ExpListPr  go to state 106
    BinOp_L1   go to state 45
    BinOp_L2   go to state 46
    BinOp_L3   go to state 47
    BinOp_L4   go to state 48
    BinOp_L5   go to state 49


State 88

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   22    | TOK_ID TOK_OF SqBExp Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 22 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 89

   47 ArgListPr: TOK_COMMA . Exp ArgListPr

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 107
    LValue  go to state 14
    UnOp    go to state 15


State 90

   45 ArgList: Exp ArgListPr .

    $default  reduce using rule 45 (ArgList)


State 91

    6 Exp: TOK_ID TOK_LBR ArgList TOK_RBR .

    $default  reduce using rule 6 (Exp)


State 92

   53 FieldExpList: TOK_ID TOK_EQUALS . Exp FieldExpListPr

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 108
    LValue  go to state 14
    UnOp    go to state 15


State 93

   13 Exp: TOK_ID TOK_LCURLB FieldExpList TOK_RCURLB .

    $default  reduce using rule 13 (Exp)


State 94

   23 SqBExp: TOK_LSQB Exp TOK_RSQB .

    $default  reduce using rule 23 (SqBExp)


State 95

   19 Exp: TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO . Exp TOK_DO Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 109
    LValue  go to state 14
    UnOp    go to state 15


State 96

   17 Exp: TOK_IF Exp TOK_THEN Exp TOK_ELSE . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 110
    LValue  go to state 14
    UnOp    go to state 15


State 97

   49 FieldList: TOK_ID . TOK_COLON TOK_ID FieldListPr

    TOK_COLON  shift, and go to state 111


State 98

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList . TOK_RBR Exp
   36       | TOK_FUNCTION TOK_ID TOK_LBR FieldList . TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_RBR  shift, and go to state 112


State 99

   32 Ty: TOK_ARRAY . TOK_OF TOK_ID

    TOK_OF  shift, and go to state 113


State 100

   31 Ty: TOK_LCURLB . FieldList TOK_RCURLB

    TOK_ID  shift, and go to state 97

    $default  reduce using rule 48 (FieldList)

    FieldList  go to state 114


State 101

   30 Ty: TOK_ID .

    $default  reduce using rule 30 (Ty)


State 102

   29 TyDec: TOK_TYPE TOK_ID TOK_EQUALS Ty .

    $default  reduce using rule 29 (TyDec)


State 103

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   33 VarDec: TOK_VAR TOK_ID TOK_ASSIGN Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 33 (VarDec)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 104

   34 VarDec: TOK_VAR TOK_ID TOK_COLON TOK_ID . TOK_ASSIGN Exp

    TOK_ASSIGN  shift, and go to state 115


State 105

   21 Exp: TOK_LET DecList TOK_IN ExpList TOK_END .

    $default  reduce using rule 21 (Exp)


State 106

   43 ExpListPr: TOK_SEMIC Exp ExpListPr .

    $default  reduce using rule 43 (ExpListPr)


State 107

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   47 ArgListPr: TOK_COMMA Exp . ArgListPr

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44
    TOK_COMMA       shift, and go to state 89

    $default  reduce using rule 46 (ArgListPr)

    ArgListPr  go to state 116
    BinOp_L1   go to state 45
    BinOp_L2   go to state 46
    BinOp_L3   go to state 47
    BinOp_L4   go to state 48
    BinOp_L5   go to state 49


State 108

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   53 FieldExpList: TOK_ID TOK_EQUALS Exp . FieldExpListPr

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44
    TOK_COMMA       shift, and go to state 117

    $default  reduce using rule 54 (FieldExpListPr)

    FieldExpListPr  go to state 118
    BinOp_L1        go to state 45
    BinOp_L2        go to state 46
    BinOp_L3        go to state 47
    BinOp_L4        go to state 48
    BinOp_L5        go to state 49


State 109

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   19    | TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO Exp . TOK_DO Exp

    TOK_DO          shift, and go to state 119
    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 110

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   17    | TOK_IF Exp TOK_THEN Exp TOK_ELSE Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 17 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 111

   49 FieldList: TOK_ID TOK_COLON . TOK_ID FieldListPr

    TOK_ID  shift, and go to state 120


State 112

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR . Exp
   36       | TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR . TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_COLON       shift, and go to state 121
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 122
    LValue  go to state 14
    UnOp    go to state 15


State 113

   32 Ty: TOK_ARRAY TOK_OF . TOK_ID

    TOK_ID  shift, and go to state 123


State 114

   31 Ty: TOK_LCURLB FieldList . TOK_RCURLB

    TOK_RCURLB  shift, and go to state 124


State 115

   34 VarDec: TOK_VAR TOK_ID TOK_COLON TOK_ID TOK_ASSIGN . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 125
    LValue  go to state 14
    UnOp    go to state 15


State 116

   47 ArgListPr: TOK_COMMA Exp ArgListPr .

    $default  reduce using rule 47 (ArgListPr)


State 117

   55 FieldExpListPr: TOK_COMMA . TOK_ID TOK_EQUALS Exp FieldExpListPr

    TOK_ID  shift, and go to state 126


State 118

   53 FieldExpList: TOK_ID TOK_EQUALS Exp FieldExpListPr .

    $default  reduce using rule 53 (FieldExpList)


State 119

   19 Exp: TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO Exp TOK_DO . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 127
    LValue  go to state 14
    UnOp    go to state 15


State 120

   49 FieldList: TOK_ID TOK_COLON TOK_ID . FieldListPr

    TOK_COMMA  shift, and go to state 128

    $default  reduce using rule 50 (FieldListPr)

    FieldListPr  go to state 129


State 121

   36 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON . TOK_ID TOK_EQUALS Exp

    TOK_ID  shift, and go to state 130


State 122

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 35 (FunDec)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 123

   32 Ty: TOK_ARRAY TOK_OF TOK_ID .

    $default  reduce using rule 32 (Ty)


State 124

   31 Ty: TOK_LCURLB FieldList TOK_RCURLB .

    $default  reduce using rule 31 (Ty)


State 125

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   34 VarDec: TOK_VAR TOK_ID TOK_COLON TOK_ID TOK_ASSIGN Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 34 (VarDec)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 126

   55 FieldExpListPr: TOK_COMMA TOK_ID . TOK_EQUALS Exp FieldExpListPr

    TOK_EQUALS  shift, and go to state 131


State 127

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   19    | TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO Exp TOK_DO Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 19 (Exp)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 128

   51 FieldListPr: TOK_COMMA . TOK_ID TOK_COLON TOK_ID FieldListPr

    TOK_ID  shift, and go to state 132


State 129

   49 FieldList: TOK_ID TOK_COLON TOK_ID FieldListPr .

    $default  reduce using rule 49 (FieldList)


State 130

   36 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID . TOK_EQUALS Exp

    TOK_EQUALS  shift, and go to state 133


State 131

   55 FieldExpListPr: TOK_COMMA TOK_ID TOK_EQUALS . Exp FieldExpListPr

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 134
    LValue  go to state 14
    UnOp    go to state 15


State 132

   51 FieldListPr: TOK_COMMA TOK_ID . TOK_COLON TOK_ID FieldListPr

    TOK_COLON  shift, and go to state 135


State 133

   36 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 136
    LValue  go to state 14
    UnOp    go to state 15


State 134

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   55 FieldExpListPr: TOK_COMMA TOK_ID TOK_EQUALS Exp . FieldExpListPr

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44
    TOK_COMMA       shift, and go to state 117

    $default  reduce using rule 54 (FieldExpListPr)

    FieldExpListPr  go to state 137
    BinOp_L1        go to state 45
    BinOp_L2        go to state 46
    BinOp_L3        go to state 47
    BinOp_L4        go to state 48
    BinOp_L5        go to state 49


State 135

   51 FieldListPr: TOK_COMMA TOK_ID TOK_COLON . TOK_ID FieldListPr

    TOK_ID  shift, and go to state 138


State 136

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   36 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp .

    TOK_PLUS_SIGN   shift, and go to state 33
    TOK_MINUS_SIGN  shift, and go to state 34
    TOK_MULT_SIGN   shift, and go to state 35
    TOK_DIV_SIGN    shift, and go to state 36
    TOK_AND         shift, and go to state 37
    TOK_OR          shift, and go to state 38
    TOK_EQUALS      shift, and go to state 39
    TOK_NEQ         shift, and go to state 40
    TOK_LT          shift, and go to state 41
    TOK_LTE         shift, and go to state 42
    TOK_GT          shift, and go to state 43
    TOK_GTE         shift, and go to state 44

    $default  reduce using rule 36 (FunDec)

    BinOp_L1  go to state 45
    BinOp_L2  go to state 46
    BinOp_L3  go to state 47
    BinOp_L4  go to state 48
    BinOp_L5  go to state 49


State 137

   55 FieldExpListPr: TOK_COMMA TOK_ID TOK_EQUALS Exp FieldExpListPr .

    $default  reduce using rule 55 (FieldExpListPr)


State 138

   51 FieldListPr: TOK_COMMA TOK_ID TOK_COLON TOK_ID . FieldListPr

    TOK_COMMA  shift, and go to state 128

    $default  reduce using rule 50 (FieldListPr)

    FieldListPr  go to state 139


State 139

   51 FieldListPr: TOK_COMMA TOK_ID TOK_COLON TOK_ID FieldListPr .

    $default  reduce using rule 51 (FieldListPr)

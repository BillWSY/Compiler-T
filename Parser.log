Grammar

    0 $accept: Prog $end

    1 Prog: Exp

    2 Exp: LValue
    3    | TOK_INTEGER
    4    | TOK_NIL
    5    | TOK_STRING
    6    | TOK_ID TOK_LBR ArgList TOK_RBR
    7    | Exp BinOp_L1 Exp
    8    | Exp BinOp_L2 Exp
    9    | Exp BinOp_L3 Exp
   10    | Exp BinOp_L4 Exp
   11    | Exp BinOp_L5 Exp
   12    | UnOp Exp
   13    | TOK_ID TOK_LCURLB FieldExpList TOK_RCURLB
   14    | TOK_LBR ExpList TOK_RBR
   15    | LValue TOK_ASSIGN Exp
   16    | TOK_IF Exp TOK_THEN Exp
   17    | TOK_IF Exp TOK_THEN Exp TOK_ELSE Exp
   18    | TOK_WHILE Exp TOK_DO Exp
   19    | TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO Exp TOK_DO Exp
   20    | TOK_BREAK
   21    | TOK_LET DecList TOK_IN ExpList TOK_END
   22    | IdSqB TOK_OF Exp

   23 SqBExp: TOK_LSQB Exp TOK_RSQB

   24 DecList: /* empty */
   25        | DecList Dec

   26 Dec: TyDec
   27    | VarDec
   28    | FunDec

   29 TyDec: TOK_TYPE TOK_ID TOK_EQUALS Ty

   30 Ty: TOK_ID
   31   | TOK_LCURLB FieldList TOK_RCURLB
   32   | TOK_ARRAY TOK_OF TOK_ID

   33 VarDec: TOK_VAR TOK_ID TOK_ASSIGN Exp
   34       | TOK_VAR TOK_ID TOK_COLON TOK_ID TOK_ASSIGN Exp

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_EQUALS Exp
   36       | TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

   37 IdSqB: TOK_ID SqBExp

   38 LValue: TOK_ID
   39       | LValue TOK_DOT TOK_ID
   40       | IdSqB
   41       | LValue SqBExp

   42 ExpList: /* empty */
   43        | Exp
   44        | ExpList TOK_SEMIC Exp

   45 ArgList: /* empty */
   46        | Exp
   47        | ArgList TOK_COMMA Exp

   48 FieldList: /* empty */
   49          | TOK_ID TOK_COLON TOK_ID
   50          | FieldList TOK_COMMA TOK_ID TOK_COLON TOK_ID

   51 FieldExpList: /* empty */
   52             | TOK_ID TOK_EQUALS Exp
   53             | FieldExpList TOK_COMMA TOK_ID TOK_EQUALS Exp

   54 BinOp_L1: TOK_MULT_SIGN
   55         | TOK_DIV_SIGN

   56 BinOp_L2: TOK_PLUS_SIGN
   57         | TOK_MINUS_SIGN

   58 BinOp_L3: TOK_NEQ
   59         | TOK_LT
   60         | TOK_LTE
   61         | TOK_GT
   62         | TOK_GTE
   63         | TOK_EQUALS

   64 BinOp_L4: TOK_AND

   65 BinOp_L5: TOK_OR

   66 UnOp: TOK_MINUS_SIGN


Terminals, with rules where they appear

$end (0) 0
error (256)
TOK_ARRAY (258) 32
TOK_BREAK (259) 20
TOK_DO (260) 18 19
TOK_ELSE (261) 17
TOK_END (262) 21
TOK_FOR (263) 19
TOK_FUNCTION (264) 35 36
TOK_IF (265) 16 17
TOK_IN (266) 21
TOK_LET (267) 21
TOK_NIL (268) 4
TOK_OF (269) 22 32
TOK_THEN (270) 16 17
TOK_TO (271) 19
TOK_TYPE (272) 29
TOK_VAR (273) 33 34
TOK_WHILE (274) 18
TOK_PLUS_SIGN (275) 56
TOK_MINUS_SIGN (276) 57 66
TOK_MULT_SIGN (277) 54
TOK_DIV_SIGN (278) 55
TOK_AND (279) 64
TOK_OR (280) 65
TOK_EQUALS (281) 29 35 36 52 53 63
TOK_NEQ (282) 58
TOK_LT (283) 59
TOK_LTE (284) 60
TOK_GT (285) 61
TOK_GTE (286) 62
TOK_ASSIGN (287) 15 19 33 34
TOK_SEMIC (288) 44
TOK_COMMA (289) 47 50 53
TOK_COLON (290) 34 36 49 50
TOK_DOT (291) 39
TOK_LBR (292) 6 14 35 36
TOK_RBR (293) 6 14 35 36
TOK_LSQB (294) 23
TOK_RSQB (295) 23
TOK_LCURLB (296) 13 31
TOK_RCURLB (297) 13 31
TOK_INTEGER (298) 3
TOK_ID (299) 6 13 19 29 30 32 33 34 35 36 37 38 39 49 50 52 53
TOK_STRING (300) 5
EXP_REDUCE_PREC (301)
IF_WO_ELSE_PREC (302)
UNIOP_PREC (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
Prog (50)
    on left: 1, on right: 0
Exp (51)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22,
    on right: 1 7 8 9 10 11 12 15 16 17 18 19 22 23 33 34 35 36 43
    44 46 47 52 53
SqBExp (52)
    on left: 23, on right: 37 41
DecList (53)
    on left: 24 25, on right: 21 25
Dec (54)
    on left: 26 27 28, on right: 25
TyDec (55)
    on left: 29, on right: 26
Ty (56)
    on left: 30 31 32, on right: 29
VarDec (57)
    on left: 33 34, on right: 27
FunDec (58)
    on left: 35 36, on right: 28
IdSqB (59)
    on left: 37, on right: 22 40
LValue (60)
    on left: 38 39 40 41, on right: 2 15 39 41
ExpList (61)
    on left: 42 43 44, on right: 14 21 44
ArgList (62)
    on left: 45 46 47, on right: 6 47
FieldList (63)
    on left: 48 49 50, on right: 31 35 36 50
FieldExpList (64)
    on left: 51 52 53, on right: 13 53
BinOp_L1 (65)
    on left: 54 55, on right: 7
BinOp_L2 (66)
    on left: 56 57, on right: 8
BinOp_L3 (67)
    on left: 58 59 60 61 62 63, on right: 9
BinOp_L4 (68)
    on left: 64, on right: 10
BinOp_L5 (69)
    on left: 65, on right: 11
UnOp (70)
    on left: 66, on right: 12


State 0

    0 $accept: . Prog $end

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Prog    go to state 12
    Exp     go to state 13
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 1

   20 Exp: TOK_BREAK .

    $default  reduce using rule 20 (Exp)


State 2

   19 Exp: TOK_FOR . TOK_ID TOK_ASSIGN Exp TOK_TO Exp TOK_DO Exp

    TOK_ID  shift, and go to state 17


State 3

   16 Exp: TOK_IF . Exp TOK_THEN Exp
   17    | TOK_IF . Exp TOK_THEN Exp TOK_ELSE Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 18
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 4

   21 Exp: TOK_LET . DecList TOK_IN ExpList TOK_END

    $default  reduce using rule 24 (DecList)

    DecList  go to state 19


State 5

    4 Exp: TOK_NIL .

    $default  reduce using rule 4 (Exp)


State 6

   18 Exp: TOK_WHILE . Exp TOK_DO Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 20
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 7

   66 UnOp: TOK_MINUS_SIGN .

    $default  reduce using rule 66 (UnOp)


State 8

   14 Exp: TOK_LBR . ExpList TOK_RBR

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    $default  reduce using rule 42 (ExpList)

    Exp      go to state 21
    IdSqB    go to state 14
    LValue   go to state 15
    ExpList  go to state 22
    UnOp     go to state 16


State 9

    3 Exp: TOK_INTEGER .

    $default  reduce using rule 3 (Exp)


State 10

    6 Exp: TOK_ID . TOK_LBR ArgList TOK_RBR
   13    | TOK_ID . TOK_LCURLB FieldExpList TOK_RCURLB
   37 IdSqB: TOK_ID . SqBExp
   38 LValue: TOK_ID .

    TOK_LBR     shift, and go to state 23
    TOK_LSQB    shift, and go to state 24
    TOK_LCURLB  shift, and go to state 25

    $default  reduce using rule 38 (LValue)

    SqBExp  go to state 26


State 11

    5 Exp: TOK_STRING .

    $default  reduce using rule 5 (Exp)


State 12

    0 $accept: Prog . $end

    $end  shift, and go to state 27


State 13

    1 Prog: Exp .
    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 1 (Prog)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 14

   22 Exp: IdSqB . TOK_OF Exp
   40 LValue: IdSqB .

    TOK_OF  shift, and go to state 45

    $default  reduce using rule 40 (LValue)


State 15

    2 Exp: LValue .
   15    | LValue . TOK_ASSIGN Exp
   39 LValue: LValue . TOK_DOT TOK_ID
   41       | LValue . SqBExp

    TOK_ASSIGN  shift, and go to state 46
    TOK_DOT     shift, and go to state 47
    TOK_LSQB    shift, and go to state 24

    $default  reduce using rule 2 (Exp)

    SqBExp  go to state 48


State 16

   12 Exp: UnOp . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 49
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 17

   19 Exp: TOK_FOR TOK_ID . TOK_ASSIGN Exp TOK_TO Exp TOK_DO Exp

    TOK_ASSIGN  shift, and go to state 50


State 18

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   16    | TOK_IF Exp . TOK_THEN Exp
   17    | TOK_IF Exp . TOK_THEN Exp TOK_ELSE Exp

    TOK_THEN        shift, and go to state 51
    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 19

   21 Exp: TOK_LET DecList . TOK_IN ExpList TOK_END
   25 DecList: DecList . Dec

    TOK_FUNCTION  shift, and go to state 52
    TOK_IN        shift, and go to state 53
    TOK_TYPE      shift, and go to state 54
    TOK_VAR       shift, and go to state 55

    Dec     go to state 56
    TyDec   go to state 57
    VarDec  go to state 58
    FunDec  go to state 59


State 20

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   18    | TOK_WHILE Exp . TOK_DO Exp

    TOK_DO          shift, and go to state 60
    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 21

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   43 ExpList: Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 43 (ExpList)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 22

   14 Exp: TOK_LBR ExpList . TOK_RBR
   44 ExpList: ExpList . TOK_SEMIC Exp

    TOK_SEMIC  shift, and go to state 61
    TOK_RBR    shift, and go to state 62


State 23

    6 Exp: TOK_ID TOK_LBR . ArgList TOK_RBR

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    $default  reduce using rule 45 (ArgList)

    Exp      go to state 63
    IdSqB    go to state 14
    LValue   go to state 15
    ArgList  go to state 64
    UnOp     go to state 16


State 24

   23 SqBExp: TOK_LSQB . Exp TOK_RSQB

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 65
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 25

   13 Exp: TOK_ID TOK_LCURLB . FieldExpList TOK_RCURLB

    TOK_ID  shift, and go to state 66

    $default  reduce using rule 51 (FieldExpList)

    FieldExpList  go to state 67


State 26

   37 IdSqB: TOK_ID SqBExp .

    $default  reduce using rule 37 (IdSqB)


State 27

    0 $accept: Prog $end .

    $default  accept


State 28

   56 BinOp_L2: TOK_PLUS_SIGN .

    $default  reduce using rule 56 (BinOp_L2)


State 29

   57 BinOp_L2: TOK_MINUS_SIGN .

    $default  reduce using rule 57 (BinOp_L2)


State 30

   54 BinOp_L1: TOK_MULT_SIGN .

    $default  reduce using rule 54 (BinOp_L1)


State 31

   55 BinOp_L1: TOK_DIV_SIGN .

    $default  reduce using rule 55 (BinOp_L1)


State 32

   64 BinOp_L4: TOK_AND .

    $default  reduce using rule 64 (BinOp_L4)


State 33

   65 BinOp_L5: TOK_OR .

    $default  reduce using rule 65 (BinOp_L5)


State 34

   63 BinOp_L3: TOK_EQUALS .

    $default  reduce using rule 63 (BinOp_L3)


State 35

   58 BinOp_L3: TOK_NEQ .

    $default  reduce using rule 58 (BinOp_L3)


State 36

   59 BinOp_L3: TOK_LT .

    $default  reduce using rule 59 (BinOp_L3)


State 37

   60 BinOp_L3: TOK_LTE .

    $default  reduce using rule 60 (BinOp_L3)


State 38

   61 BinOp_L3: TOK_GT .

    $default  reduce using rule 61 (BinOp_L3)


State 39

   62 BinOp_L3: TOK_GTE .

    $default  reduce using rule 62 (BinOp_L3)


State 40

    7 Exp: Exp BinOp_L1 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 68
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 41

    8 Exp: Exp BinOp_L2 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 69
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 42

    9 Exp: Exp BinOp_L3 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 70
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 43

   10 Exp: Exp BinOp_L4 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 71
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 44

   11 Exp: Exp BinOp_L5 . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 72
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 45

   22 Exp: IdSqB TOK_OF . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 73
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 46

   15 Exp: LValue TOK_ASSIGN . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 74
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 47

   39 LValue: LValue TOK_DOT . TOK_ID

    TOK_ID  shift, and go to state 75


State 48

   41 LValue: LValue SqBExp .

    $default  reduce using rule 41 (LValue)


State 49

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   12    | UnOp Exp .

    $default  reduce using rule 12 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 50

   19 Exp: TOK_FOR TOK_ID TOK_ASSIGN . Exp TOK_TO Exp TOK_DO Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 76
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 51

   16 Exp: TOK_IF Exp TOK_THEN . Exp
   17    | TOK_IF Exp TOK_THEN . Exp TOK_ELSE Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 77
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 52

   35 FunDec: TOK_FUNCTION . TOK_ID TOK_LBR FieldList TOK_RBR TOK_EQUALS Exp
   36       | TOK_FUNCTION . TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_ID  shift, and go to state 78


State 53

   21 Exp: TOK_LET DecList TOK_IN . ExpList TOK_END

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    $default  reduce using rule 42 (ExpList)

    Exp      go to state 21
    IdSqB    go to state 14
    LValue   go to state 15
    ExpList  go to state 79
    UnOp     go to state 16


State 54

   29 TyDec: TOK_TYPE . TOK_ID TOK_EQUALS Ty

    TOK_ID  shift, and go to state 80


State 55

   33 VarDec: TOK_VAR . TOK_ID TOK_ASSIGN Exp
   34       | TOK_VAR . TOK_ID TOK_COLON TOK_ID TOK_ASSIGN Exp

    TOK_ID  shift, and go to state 81


State 56

   25 DecList: DecList Dec .

    $default  reduce using rule 25 (DecList)


State 57

   26 Dec: TyDec .

    $default  reduce using rule 26 (Dec)


State 58

   27 Dec: VarDec .

    $default  reduce using rule 27 (Dec)


State 59

   28 Dec: FunDec .

    $default  reduce using rule 28 (Dec)


State 60

   18 Exp: TOK_WHILE Exp TOK_DO . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 82
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 61

   44 ExpList: ExpList TOK_SEMIC . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 83
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 62

   14 Exp: TOK_LBR ExpList TOK_RBR .

    $default  reduce using rule 14 (Exp)


State 63

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   46 ArgList: Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 46 (ArgList)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 64

    6 Exp: TOK_ID TOK_LBR ArgList . TOK_RBR
   47 ArgList: ArgList . TOK_COMMA Exp

    TOK_COMMA  shift, and go to state 84
    TOK_RBR    shift, and go to state 85


State 65

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   23 SqBExp: TOK_LSQB Exp . TOK_RSQB

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39
    TOK_RSQB        shift, and go to state 86

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 66

   52 FieldExpList: TOK_ID . TOK_EQUALS Exp

    TOK_EQUALS  shift, and go to state 87


State 67

   13 Exp: TOK_ID TOK_LCURLB FieldExpList . TOK_RCURLB
   53 FieldExpList: FieldExpList . TOK_COMMA TOK_ID TOK_EQUALS Exp

    TOK_COMMA   shift, and go to state 88
    TOK_RCURLB  shift, and go to state 89


State 68

    7 Exp: Exp . BinOp_L1 Exp
    7    | Exp BinOp_L1 Exp .
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp

    $default  reduce using rule 7 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 69

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    8    | Exp BinOp_L2 Exp .
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp

    TOK_MULT_SIGN  shift, and go to state 30
    TOK_DIV_SIGN   shift, and go to state 31

    $default  reduce using rule 8 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 70

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
    9    | Exp BinOp_L3 Exp .
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31

    TOK_EQUALS  error (nonassociative)
    TOK_NEQ     error (nonassociative)
    TOK_LT      error (nonassociative)
    TOK_LTE     error (nonassociative)
    TOK_GT      error (nonassociative)
    TOK_GTE     error (nonassociative)

    $default  reduce using rule 9 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 71

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   10    | Exp BinOp_L4 Exp .
   11    | Exp . BinOp_L5 Exp

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 10 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 72

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   11    | Exp BinOp_L5 Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 11 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 73

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   22    | IdSqB TOK_OF Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 22 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 74

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   15    | LValue TOK_ASSIGN Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 15 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 75

   39 LValue: LValue TOK_DOT TOK_ID .

    $default  reduce using rule 39 (LValue)


State 76

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   19    | TOK_FOR TOK_ID TOK_ASSIGN Exp . TOK_TO Exp TOK_DO Exp

    TOK_TO          shift, and go to state 90
    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 77

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   16    | TOK_IF Exp TOK_THEN Exp .
   17    | TOK_IF Exp TOK_THEN Exp . TOK_ELSE Exp

    TOK_ELSE        shift, and go to state 91
    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 16 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 78

   35 FunDec: TOK_FUNCTION TOK_ID . TOK_LBR FieldList TOK_RBR TOK_EQUALS Exp
   36       | TOK_FUNCTION TOK_ID . TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_LBR  shift, and go to state 92


State 79

   21 Exp: TOK_LET DecList TOK_IN ExpList . TOK_END
   44 ExpList: ExpList . TOK_SEMIC Exp

    TOK_END    shift, and go to state 93
    TOK_SEMIC  shift, and go to state 61


State 80

   29 TyDec: TOK_TYPE TOK_ID . TOK_EQUALS Ty

    TOK_EQUALS  shift, and go to state 94


State 81

   33 VarDec: TOK_VAR TOK_ID . TOK_ASSIGN Exp
   34       | TOK_VAR TOK_ID . TOK_COLON TOK_ID TOK_ASSIGN Exp

    TOK_ASSIGN  shift, and go to state 95
    TOK_COLON   shift, and go to state 96


State 82

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   18    | TOK_WHILE Exp TOK_DO Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 18 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 83

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   44 ExpList: ExpList TOK_SEMIC Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 44 (ExpList)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 84

   47 ArgList: ArgList TOK_COMMA . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 97
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 85

    6 Exp: TOK_ID TOK_LBR ArgList TOK_RBR .

    $default  reduce using rule 6 (Exp)


State 86

   23 SqBExp: TOK_LSQB Exp TOK_RSQB .

    $default  reduce using rule 23 (SqBExp)


State 87

   52 FieldExpList: TOK_ID TOK_EQUALS . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 98
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 88

   53 FieldExpList: FieldExpList TOK_COMMA . TOK_ID TOK_EQUALS Exp

    TOK_ID  shift, and go to state 99


State 89

   13 Exp: TOK_ID TOK_LCURLB FieldExpList TOK_RCURLB .

    $default  reduce using rule 13 (Exp)


State 90

   19 Exp: TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO . Exp TOK_DO Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 100
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 91

   17 Exp: TOK_IF Exp TOK_THEN Exp TOK_ELSE . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 101
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 92

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR . FieldList TOK_RBR TOK_EQUALS Exp
   36       | TOK_FUNCTION TOK_ID TOK_LBR . FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_ID  shift, and go to state 102

    $default  reduce using rule 48 (FieldList)

    FieldList  go to state 103


State 93

   21 Exp: TOK_LET DecList TOK_IN ExpList TOK_END .

    $default  reduce using rule 21 (Exp)


State 94

   29 TyDec: TOK_TYPE TOK_ID TOK_EQUALS . Ty

    TOK_ARRAY   shift, and go to state 104
    TOK_LCURLB  shift, and go to state 105
    TOK_ID      shift, and go to state 106

    Ty  go to state 107


State 95

   33 VarDec: TOK_VAR TOK_ID TOK_ASSIGN . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 108
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 96

   34 VarDec: TOK_VAR TOK_ID TOK_COLON . TOK_ID TOK_ASSIGN Exp

    TOK_ID  shift, and go to state 109


State 97

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   47 ArgList: ArgList TOK_COMMA Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 47 (ArgList)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 98

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   52 FieldExpList: TOK_ID TOK_EQUALS Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 52 (FieldExpList)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 99

   53 FieldExpList: FieldExpList TOK_COMMA TOK_ID . TOK_EQUALS Exp

    TOK_EQUALS  shift, and go to state 110


State 100

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   19    | TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO Exp . TOK_DO Exp

    TOK_DO          shift, and go to state 111
    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 101

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   17    | TOK_IF Exp TOK_THEN Exp TOK_ELSE Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 17 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 102

   49 FieldList: TOK_ID . TOK_COLON TOK_ID

    TOK_COLON  shift, and go to state 112


State 103

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList . TOK_RBR TOK_EQUALS Exp
   36       | TOK_FUNCTION TOK_ID TOK_LBR FieldList . TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp
   50 FieldList: FieldList . TOK_COMMA TOK_ID TOK_COLON TOK_ID

    TOK_COMMA  shift, and go to state 113
    TOK_RBR    shift, and go to state 114


State 104

   32 Ty: TOK_ARRAY . TOK_OF TOK_ID

    TOK_OF  shift, and go to state 115


State 105

   31 Ty: TOK_LCURLB . FieldList TOK_RCURLB

    TOK_ID  shift, and go to state 102

    $default  reduce using rule 48 (FieldList)

    FieldList  go to state 116


State 106

   30 Ty: TOK_ID .

    $default  reduce using rule 30 (Ty)


State 107

   29 TyDec: TOK_TYPE TOK_ID TOK_EQUALS Ty .

    $default  reduce using rule 29 (TyDec)


State 108

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   33 VarDec: TOK_VAR TOK_ID TOK_ASSIGN Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 33 (VarDec)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 109

   34 VarDec: TOK_VAR TOK_ID TOK_COLON TOK_ID . TOK_ASSIGN Exp

    TOK_ASSIGN  shift, and go to state 117


State 110

   53 FieldExpList: FieldExpList TOK_COMMA TOK_ID TOK_EQUALS . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 118
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 111

   19 Exp: TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO Exp TOK_DO . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 119
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 112

   49 FieldList: TOK_ID TOK_COLON . TOK_ID

    TOK_ID  shift, and go to state 120


State 113

   50 FieldList: FieldList TOK_COMMA . TOK_ID TOK_COLON TOK_ID

    TOK_ID  shift, and go to state 121


State 114

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR . TOK_EQUALS Exp
   36       | TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR . TOK_COLON TOK_ID TOK_EQUALS Exp

    TOK_EQUALS  shift, and go to state 122
    TOK_COLON   shift, and go to state 123


State 115

   32 Ty: TOK_ARRAY TOK_OF . TOK_ID

    TOK_ID  shift, and go to state 124


State 116

   31 Ty: TOK_LCURLB FieldList . TOK_RCURLB
   50 FieldList: FieldList . TOK_COMMA TOK_ID TOK_COLON TOK_ID

    TOK_COMMA   shift, and go to state 113
    TOK_RCURLB  shift, and go to state 125


State 117

   34 VarDec: TOK_VAR TOK_ID TOK_COLON TOK_ID TOK_ASSIGN . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 126
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 118

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   53 FieldExpList: FieldExpList TOK_COMMA TOK_ID TOK_EQUALS Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 53 (FieldExpList)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 119

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   19    | TOK_FOR TOK_ID TOK_ASSIGN Exp TOK_TO Exp TOK_DO Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 19 (Exp)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 120

   49 FieldList: TOK_ID TOK_COLON TOK_ID .

    $default  reduce using rule 49 (FieldList)


State 121

   50 FieldList: FieldList TOK_COMMA TOK_ID . TOK_COLON TOK_ID

    TOK_COLON  shift, and go to state 127


State 122

   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_EQUALS . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 128
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 123

   36 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON . TOK_ID TOK_EQUALS Exp

    TOK_ID  shift, and go to state 129


State 124

   32 Ty: TOK_ARRAY TOK_OF TOK_ID .

    $default  reduce using rule 32 (Ty)


State 125

   31 Ty: TOK_LCURLB FieldList TOK_RCURLB .

    $default  reduce using rule 31 (Ty)


State 126

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   34 VarDec: TOK_VAR TOK_ID TOK_COLON TOK_ID TOK_ASSIGN Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 34 (VarDec)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 127

   50 FieldList: FieldList TOK_COMMA TOK_ID TOK_COLON . TOK_ID

    TOK_ID  shift, and go to state 130


State 128

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   35 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_EQUALS Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 35 (FunDec)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44


State 129

   36 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID . TOK_EQUALS Exp

    TOK_EQUALS  shift, and go to state 131


State 130

   50 FieldList: FieldList TOK_COMMA TOK_ID TOK_COLON TOK_ID .

    $default  reduce using rule 50 (FieldList)


State 131

   36 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS . Exp

    TOK_BREAK       shift, and go to state 1
    TOK_FOR         shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_LET         shift, and go to state 4
    TOK_NIL         shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_MINUS_SIGN  shift, and go to state 7
    TOK_LBR         shift, and go to state 8
    TOK_INTEGER     shift, and go to state 9
    TOK_ID          shift, and go to state 10
    TOK_STRING      shift, and go to state 11

    Exp     go to state 132
    IdSqB   go to state 14
    LValue  go to state 15
    UnOp    go to state 16


State 132

    7 Exp: Exp . BinOp_L1 Exp
    8    | Exp . BinOp_L2 Exp
    9    | Exp . BinOp_L3 Exp
   10    | Exp . BinOp_L4 Exp
   11    | Exp . BinOp_L5 Exp
   36 FunDec: TOK_FUNCTION TOK_ID TOK_LBR FieldList TOK_RBR TOK_COLON TOK_ID TOK_EQUALS Exp .

    TOK_PLUS_SIGN   shift, and go to state 28
    TOK_MINUS_SIGN  shift, and go to state 29
    TOK_MULT_SIGN   shift, and go to state 30
    TOK_DIV_SIGN    shift, and go to state 31
    TOK_AND         shift, and go to state 32
    TOK_OR          shift, and go to state 33
    TOK_EQUALS      shift, and go to state 34
    TOK_NEQ         shift, and go to state 35
    TOK_LT          shift, and go to state 36
    TOK_LTE         shift, and go to state 37
    TOK_GT          shift, and go to state 38
    TOK_GTE         shift, and go to state 39

    $default  reduce using rule 36 (FunDec)

    BinOp_L1  go to state 40
    BinOp_L2  go to state 41
    BinOp_L3  go to state 42
    BinOp_L4  go to state 43
    BinOp_L5  go to state 44
